<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.EnableWebMvc"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Retention"/>
    <fullyQualifiedTypeName name="java.lang.annotation.RetentionPolicy"/>
    <fullyQualifiedTypeName name="java.lang.annotation.Target"/>
    <fullyQualifiedTypeName name="java.lang.annotation.ElementType"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonTypeInfo.Id"/>
    <fullyQualifiedTypeName name="org.springframework.data.annotation.Id"/>
    <fullyQualifiedTypeName name="java.io.FileDescriptor"/>
    <fullyQualifiedTypeName name="org.springframework.data.mapping.model.FieldNamingStrategy"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.DBRef"/>
    <fullyQualifiedTypeName name="com.nishant.events.CascadeSave"/>
    <fullyQualifiedTypeName name="com.nishant.events.FieldCallBack"/>
    <fullyQualifiedTypeName name="org.springframework.util.ReflectionUtils.FieldCallback"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener"/>
    <fullyQualifiedTypeName name="org.springframework.data.mongodb.core.MongoOperations"/>
    <fullyQualifiedTypeName name="java.lang.Override"/>
    <fullyQualifiedTypeName name="org.springframework.util.ReflectionUtils"/>
    <fullyQualifiedTypeName name="com.nishant.events.CascadeCallBack"/>
    <fullyQualifiedTypeName name="com.nishant.events.CascadeSaveEventListener"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="com.nishant.model.BodyInfo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpHeaders"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpEntity"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringSerializer"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.producer.ProducerConfig"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonSerializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ProducerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaProducerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.KafkaTemplate"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
    <fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.support.serializer.JsonDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
    <fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
    <fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
    <fullyQualifiedTypeName name="com.nishant.model.RawMaterialWrapper"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.ToString"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="com.nishant.model.Car"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.nishant.kafka.Producer"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"/>
</qualifiedTypeNameHistroy>
