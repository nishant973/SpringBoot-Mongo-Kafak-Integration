content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="org.springframework.data.mongodb.core.MongoOperations"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.FluentMongoOperations"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableFindOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableInsertOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableUpdateOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableRemoveOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableAggregationOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.ExecutableMapReduceOperation"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.data.mongodb.core.index.IndexOperationsProvider"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.core.MongoTemplate"><rhs name\="org.springframework.data.mongodb.core.MongoTemplate"/></lhs><lhs name\="org.springframework.data.mongodb.CodecRegistryProvider"><rhs name\="org.springframework.data.mongodb.core.SimpleMongoClientDbFactory"/></lhs><lhs name\="org.springframework.data.mongodb.MongoSessionProvider"><rhs name\="org.springframework.data.mongodb.core.SimpleMongoClientDbFactory"/></lhs><lhs name\="org.springframework.data.mongodb.MongoDatabaseFactory"><rhs name\="org.springframework.data.mongodb.core.SimpleMongoClientDbFactory"/></lhs><lhs name\="com.nishant.configuration.MongoProperties"><rhs name\="com.nishant.configuration.MongoProperties"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="org.springframework.plugin.metadata.SimplePluginMetadata"><rhs name\="springfox.documentation.spi.DocumentationType"/></lhs><lhs name\="org.springframework.plugin.metadata.PluginMetadata"><rhs name\="springfox.documentation.spi.DocumentationType"/></lhs><lhs name\="springfox.documentation.spi.DocumentationType"><rhs name\="springfox.documentation.spi.DocumentationType"/></lhs><lhs name\="java.lang.Enum"><rhs name\="java.lang.annotation.ElementType"/><rhs name\="org.springframework.http.HttpMethod"/><rhs name\="org.springframework.http.HttpStatus"/></lhs><lhs name\="java.lang.constant.Constable"><rhs name\="java.lang.annotation.ElementType"/><rhs name\="org.springframework.http.HttpMethod"/><rhs name\="org.springframework.http.HttpStatus"/></lhs><lhs name\="org.springframework.util.ReflectionUtils$FieldCallback"><rhs name\="com.nishant.events.FieldCallBack"/><rhs name\="com.nishant.events.CascadeCallBack"/></lhs><lhs name\="com.nishant.events.FieldCallBack"><rhs name\="com.nishant.events.FieldCallBack"/></lhs><lhs name\="org.springframework.data.mongodb.core.mapping.event.AbstractMongoEventListener"><rhs name\="com.nishant.events.CascadeSaveEventListener"/></lhs><lhs name\="org.springframework.context.ApplicationListener"><rhs name\="com.nishant.events.CascadeSaveEventListener"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="java.util.EventListener"><rhs name\="com.nishant.events.CascadeSaveEventListener"/><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="com.nishant.events.CascadeSaveEventListener"><rhs name\="com.nishant.events.CascadeSaveEventListener"/></lhs><lhs name\="org.springframework.web.client.RestOperations"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.InterceptingHttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.http.client.support.HttpAccessor"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.web.client.RestTemplate"><rhs name\="org.springframework.web.client.RestTemplate"/></lhs><lhs name\="org.springframework.util.MultiValueMap"><rhs name\="org.springframework.http.HttpHeaders"/></lhs><lhs name\="java.util.Map"><rhs name\="org.springframework.http.HttpHeaders"/><rhs name\="java.util.HashMap"/></lhs><lhs name\="org.springframework.http.HttpHeaders"><rhs name\="org.springframework.http.HttpHeaders"/></lhs><lhs name\="org.springframework.http.HttpEntity"><rhs name\="org.springframework.http.HttpEntity"/><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="org.springframework.http.ResponseEntity"><rhs name\="org.springframework.http.ResponseEntity"/></lhs><lhs name\="com.nishant.model.RawMaterialWrapper"><rhs name\="com.nishant.model.RawMaterialWrapper"/></lhs><lhs name\="org.springframework.kafka.core.ProducerFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaProducerFactory"/></lhs><lhs name\="org.springframework.kafka.core.KafkaOperations"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.kafka.core.KafkaTemplate"><rhs name\="org.springframework.kafka.core.KafkaTemplate"/></lhs><lhs name\="org.springframework.kafka.core.ConsumerFactory"><rhs name\="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/></lhs><lhs name\="java.io.Closeable"><rhs name\="org.apache.kafka.common.serialization.StringDeserializer"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="org.apache.kafka.common.serialization.StringDeserializer"/></lhs><lhs name\="org.apache.kafka.common.serialization.Deserializer"><rhs name\="org.apache.kafka.common.serialization.StringDeserializer"/></lhs><lhs name\="org.springframework.kafka.config.AbstractKafkaListenerContainerFactory"><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.kafka.config.KafkaListenerContainerFactory"><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisherAware"><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs><lhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"><rhs name\="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/></lhs></history>
content_assist_number_of_computers=15
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.ui.formatterprofiles.version=19
spelling_locale_initialized=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
